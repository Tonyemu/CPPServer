// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RequestHeader.proto

#ifndef PROTOBUF_RequestHeader_2eproto__INCLUDED
#define PROTOBUF_RequestHeader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace tonyemu {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RequestHeader_2eproto();
void protobuf_AssignDesc_RequestHeader_2eproto();
void protobuf_ShutdownFile_RequestHeader_2eproto();

class RequestHeader;

// ===================================================================

class RequestHeader : public ::google::protobuf::Message {
 public:
  RequestHeader();
  virtual ~RequestHeader();

  RequestHeader(const RequestHeader& from);

  inline RequestHeader& operator=(const RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHeader& default_instance();

  void Swap(RequestHeader* other);

  // implements Message ----------------------------------------------

  RequestHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHeader& from);
  void MergeFrom(const RequestHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string host = 1;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 1;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  inline void set_allocated_host(::std::string* host);

  // required bool need_response = 2;
  inline bool has_need_response() const;
  inline void clear_need_response();
  static const int kNeedResponseFieldNumber = 2;
  inline bool need_response() const;
  inline void set_need_response(bool value);

  // @@protoc_insertion_point(class_scope:com.tonyemu.proto.RequestHeader)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_need_response();
  inline void clear_has_need_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* host_;
  bool need_response_;
  friend void  protobuf_AddDesc_RequestHeader_2eproto();
  friend void protobuf_AssignDesc_RequestHeader_2eproto();
  friend void protobuf_ShutdownFile_RequestHeader_2eproto();

  void InitAsDefaultInstance();
  static RequestHeader* default_instance_;
};
// ===================================================================


// ===================================================================

// RequestHeader

// required string host = 1;
inline bool RequestHeader::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestHeader::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestHeader::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestHeader::clear_host() {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_->clear();
  }
  clear_has_host();
}
inline const ::std::string& RequestHeader::host() const {
  // @@protoc_insertion_point(field_get:com.tonyemu.proto.RequestHeader.host)
  return *host_;
}
inline void RequestHeader::set_host(const ::std::string& value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set:com.tonyemu.proto.RequestHeader.host)
}
inline void RequestHeader::set_host(const char* value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.tonyemu.proto.RequestHeader.host)
}
inline void RequestHeader::set_host(const char* value, size_t size) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.tonyemu.proto.RequestHeader.host)
}
inline ::std::string* RequestHeader::mutable_host() {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.tonyemu.proto.RequestHeader.host)
  return host_;
}
inline ::std::string* RequestHeader::release_host() {
  clear_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = host_;
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestHeader::set_allocated_host(::std::string* host) {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete host_;
  }
  if (host) {
    set_has_host();
    host_ = host;
  } else {
    clear_has_host();
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.tonyemu.proto.RequestHeader.host)
}

// required bool need_response = 2;
inline bool RequestHeader::has_need_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestHeader::set_has_need_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestHeader::clear_has_need_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestHeader::clear_need_response() {
  need_response_ = false;
  clear_has_need_response();
}
inline bool RequestHeader::need_response() const {
  // @@protoc_insertion_point(field_get:com.tonyemu.proto.RequestHeader.need_response)
  return need_response_;
}
inline void RequestHeader::set_need_response(bool value) {
  set_has_need_response();
  need_response_ = value;
  // @@protoc_insertion_point(field_set:com.tonyemu.proto.RequestHeader.need_response)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace tonyemu
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RequestHeader_2eproto__INCLUDED
